{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\IntelPC_01\\\\Desktop\\\\Tasks\\\\MERNPH\\\\ReactApp\\\\my-first-react-app\\\\src\\\\components\\\\MyForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyForm = () => {\n  _s();\n\n  const [animegroup, setAnimeGroup] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [skill, setSkill] = useState(\"\");\n  const [anime, setAnime] = useState(\"\");\n  const [nameError, setNameError] = useState(\"\");\n\n  const animeNamehandler = e => {\n    if (e.target.value.length < 10) {\n      setNameError(\"Please have more than 10 characters!\");\n    } else {\n      setNameError(\"\");\n    }\n\n    setAnime(e.target.value);\n  };\n\n  const submitHandle = e => {\n    e.preventDefault(0);\n    const animeset = {\n      name,\n      anime,\n      skill\n    };\n    setAnimeGroup(animeset, ...animegroup);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandle,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"ADD FORM\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Current Value:\", name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"inputName\",\n          children: \"Enter any name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          onChange: e => setName(e.target.value),\n          value: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), name.length > 10 ? /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Should only be less than 10\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 34\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"animeName\",\n          children: \"Enter Anime name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          onChange: animeNamehandler,\n          value: anime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), nameError && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: nameError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"skillLevel\",\n          children: \"Enter any skill level:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"skill\",\n          onChange: e => setSkill(e.target.value),\n          value: skill\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"SEND\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"NAME:\", name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"ANIME:\", anime]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"skill:\", skill]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MyForm, \"aK1paEUz4NYjspEAz+Ezw6AHg/w=\");\n\n_c = MyForm;\nexport default MyForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyForm\");","map":{"version":3,"sources":["C:/Users/IntelPC_01/Desktop/Tasks/MERNPH/ReactApp/my-first-react-app/src/components/MyForm.js"],"names":["useState","MyForm","animegroup","setAnimeGroup","name","setName","skill","setSkill","anime","setAnime","nameError","setNameError","animeNamehandler","e","target","value","length","submitHandle","preventDefault","animeset"],"mappings":"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","sourcesContent":["import {useState} from \"react\";\r\nconst MyForm =()=>{\r\n\r\n    const [animegroup,setAnimeGroup]= useState([]);\r\n\r\n    const [name,setName]= useState(\"\");\r\n    const [skill,setSkill]= useState(\"\");\r\n    const [anime,setAnime]= useState(\"\");\r\n\r\n\r\n    const [nameError, setNameError]=useState(\"\");\r\n\r\n\r\n    const animeNamehandler=(e)=>\r\n    {\r\n        if(e.target.value.length < 10)\r\n        {\r\n            setNameError(\"Please have more than 10 characters!\");\r\n        }\r\n        else{\r\n            setNameError(\"\");\r\n        }\r\n        setAnime(e.target.value);\r\n    }\r\n\r\n    const submitHandle=(e)=>{\r\n        e.preventDefault(0)\r\n        const animeset={\r\n            name,\r\n            anime,\r\n            skill\r\n        }\r\n        setAnimeGroup(animeset,...animegroup);\r\n    }\r\n    \r\n    return(\r\n        <div>\r\n        <form onSubmit={submitHandle}>\r\n            <h1>ADD FORM</h1>\r\n            <h2>Current Value:{name}</h2>\r\n            <div>\r\n                <label htmlFor=\"inputName\">Enter any name:</label>\r\n                <input type=\"text\" id=\"name\" onChange={(e)=> setName(e.target.value)} \r\n                value={name}></input>\r\n            </div>\r\n            {(name.length >10 )? <h2>Should only be less than 10</h2>:null}\r\n            <div>\r\n                <label htmlFor=\"animeName\">Enter Anime name:</label>\r\n                <input type=\"text\" id=\"name\" onChange={animeNamehandler} \r\n                value={anime}></input>\r\n            </div>\r\n            {nameError && <p>{nameError}</p>}\r\n            <div>\r\n                <label htmlFor=\"skillLevel\">Enter any skill level:</label>\r\n                <input type=\"number\" id=\"skill\" onChange={(e)=> setSkill(e.target.value)} \r\n                value={skill}></input>\r\n            </div>\r\n            {}\r\n            <button type=\"submit\">SEND</button>\r\n        </form>\r\n        <div>\r\n            <p>NAME:{name}</p>\r\n            <p>ANIME:{anime}</p>\r\n            <p>skill:{skill}</p>\r\n        </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default MyForm;\r\n"]},"metadata":{},"sourceType":"module"}